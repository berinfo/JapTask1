// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;
using server.Datas;

namespace server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220310143543_RecipeIngredients")]
    partial class RecipeIngredients
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("server.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 3, 3, 5, 25, 4, 0, DateTimeKind.Unspecified),
                            Name = "Barbecue"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 4, 4, 6, 15, 14, 0, DateTimeKind.Unspecified),
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 4, 6, 3, 17, 25, 0, DateTimeKind.Unspecified),
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 5, 6, 2, 2, 2, 0, DateTimeKind.Unspecified),
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2018, 5, 7, 1, 15, 15, 0, DateTimeKind.Unspecified),
                            Name = "Dinner"
                        });
                });

            modelBuilder.Entity("server.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Oil",
                            Price = 3f,
                            Quantity = 1,
                            Unit = 4
                        },
                        new
                        {
                            Id = 2,
                            Name = "Flour",
                            Price = 30f,
                            Quantity = 25,
                            Unit = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sugar",
                            Price = 3f,
                            Quantity = 1,
                            Unit = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Salt",
                            Price = 2f,
                            Quantity = 1,
                            Unit = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Olive Oil",
                            Price = 20f,
                            Quantity = 1,
                            Unit = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Egg",
                            Price = 9f,
                            Quantity = 30,
                            Unit = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chicken meat",
                            Price = 10f,
                            Quantity = 1,
                            Unit = 2
                        });
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("server.Models.RecipeIngredients", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 85, 214, 77, 65, 229, 47, 73, 208, 178, 77, 196, 223, 163, 173, 145, 114, 114, 0, 103, 154, 68, 112, 81, 237, 196, 179, 38, 249, 15, 239, 183, 19, 109, 203, 201, 172, 142, 243, 141, 63, 122, 84, 182, 244, 153, 143, 201, 36, 191, 37, 244, 21, 128, 115, 193, 30, 51, 6, 212, 84, 195, 50, 125, 213 },
                            PasswordSalt = new byte[] { 99, 146, 101, 191, 34, 186, 238, 148, 23, 166, 132, 145, 64, 235, 112, 168, 4, 111, 250, 21, 140, 173, 45, 136, 98, 231, 29, 213, 227, 169, 181, 143, 72, 47, 197, 161, 122, 213, 247, 103, 243, 81, 79, 124, 221, 82, 218, 79, 36, 32, 234, 192, 181, 25, 59, 171, 67, 0, 47, 36, 239, 98, 186, 37, 242, 43, 226, 165, 118, 235, 65, 36, 171, 205, 16, 160, 112, 113, 189, 95, 80, 102, 177, 182, 125, 66, 5, 165, 122, 169, 106, 10, 147, 48, 158, 124, 191, 65, 77, 119, 229, 151, 253, 8, 48, 183, 14, 244, 71, 165, 128, 186, 40, 84, 49, 125, 97, 170, 41, 235, 10, 255, 201, 174, 159, 162, 238, 150 },
                            Username = "user123"
                        });
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.HasOne("server.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("server.Models.RecipeIngredients", b =>
                {
                    b.HasOne("server.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("server.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("server.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("server.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
